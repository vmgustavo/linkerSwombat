    loadi A0 IO ; get OP
    loadi A1 IO ; get A
    loadi A2 IO ; get B
    loadi A3 IO ; get C

    loadc A6 1
	move A7 A0
    subtract A6 A7
    jmpz A6 _call_op1

	loadc A6 2
	move A7 A0
    subtract A6 A7
    jmpz A6 _call_op2

    loadc A6 3
	move A7 A0
    subtract A6 A7
    jmpz A6 _call_op3

    loadc A6 4
	move A7 A0
    subtract A6 A7
    jmpz A6 _call_op4

    loadc A6 5
	move A7 A0
    subtract A6 A7
    jmpz A6 _call_op5

    jump _end

_call_op1:
    call _op1
    jump _end
_call_op2:
    call _op2
    jump _end
_call_op3:
    call _op3
    jump _end
_call_op4:
    call _op4
    jump _end
_call_op5:
    call _op5
    jump _end

_end:
    exit

_op1:

    loadc A7 A1
    loadc A6 A2
    subtract A7 A6
    jmpn A7 _bMAa
    loadc A7 A1     ; aMAb
    loadc A6 A2
    subtract A7 A6
    jmpn A7 _printC1    ; cMAa
    jump _printA1   ; aMAc

_bMAa:
    loadc A7 A2
    loadc A6 A3
    subtract A7 A6
    jmpn A7 _printC1    ; cMAb
    jump _printB1   ; bMAc

_printA1:
    loadc A7 A1
    storei A7 IO
    jump _endOp1

_printB1:
    loadc A7 A2
    storei A7 IO
    jump _endOp1

_printC1:
    loadc A7 A3
    storei A7 IO
    jump _endOp1

_endOp1:

return

_op2:

    loadc A7 A1
    loadc A6 A2
    subtract A7 A6
    jmpn A7 _aMEb
    loadc A7 A2 ; bMEa
    loadc A6 A3
    subtract A7 A6
    jmpn A7 _printB2    ; bMEc
    jump _printC2   ; cMEb

_aMEb:
    loadc A7 A1
    loadc A6 A3
    subtract A7 A6
    jmpn A7 _printA2    ; aMEc
    jump _printC2   ; cMEa

_printA2:
    loadc A7 A1
    storei A7 IO
    jump _endOp2

_printB2:
    loadc A7 A2
    storei A7 IO
    jump _endOp2

_printC2:
    loadc A7 A3
    storei A7 IO
    jump _endOp2

_endOp2:

return

_op3:

    clear A7
    loadc A6 A1
    add A7 A6
    loadc A6 A2
    add A7 A6
    loadc A6 A3
    add A7 A6

	storei A7 IO

return

_op4:

    loadc A7 A1
    loadc A6 A2
    multiply A7 A6
    loadc A6 A3
    multiply A7 A6

    storei A7 IO

return

_op5:

    clear A7
    loadc A6 A1
    add A7 A6
    loadc A6 A2
    add A7 A6
    loadc A6 A3
    add A7 A6

    loadc A6 3
    divide A7 A6

    storei A7 IO

return
