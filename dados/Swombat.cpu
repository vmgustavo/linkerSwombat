<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Swombat.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="sgn5" type="required" numBits="8" relativity="absolute" signed="true" defaultValue="0" id="model.Field476242eb">
	</Field>
	<Field name="reg" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field5c33f9e3">
	</Field>
	<Field name="un3" type="ignored" numBits="3" relativity="absolute" signed="true" defaultValue="0" id="model.Field6168335a">
	</Field>
	<Field name="op" type="required" numBits="5" relativity="absolute" signed="false" defaultValue="0" id="model.Field4976deee">
	</Field>
	<Field name="un5" type="ignored" numBits="5" relativity="absolute" signed="true" defaultValue="0" id="model.Field1cd6a831">
	</Field>
	<Field name="addr" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field5fe9b6a9">
	</Field>
	<Field name="un8" type="ignored" numBits="8" relativity="absolute" signed="true" defaultValue="0" id="model.Field7f3bbced">
	</Field>
	<Field name="un11" type="ignored" numBits="11" relativity="absolute" signed="true" defaultValue="0" id="model.Fieldc58c4a">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="buffer1" width="16" initialValue="0" readOnly="false" id="model.module.Register4587e0a" />
	<Register name="buffer2" width="16" initialValue="0" readOnly="false" id="model.module.Registerfa8d81f" />
	<Register name="ir" width="16" initialValue="0" readOnly="false" id="model.module.Register7734dee9" />
	<Register name="mar" width="12" initialValue="0" readOnly="false" id="model.module.Registerc488d59" />
	<Register name="mdr" width="16" initialValue="0" readOnly="false" id="model.module.Register4b270af4" />
	<Register name="pc" width="12" initialValue="0" readOnly="false" id="model.module.Register2865baf" />
	<Register name="sdr" width="16" initialValue="0" readOnly="false" id="model.module.Register53140e80" />
	<Register name="stackpt" width="16" initialValue="0" readOnly="false" id="model.module.Register1b7e63fe" />
	<Register name="status" width="3" initialValue="0" readOnly="false" id="model.module.Register68fdbacf" />

	<!--............. register arrays ...............-->
	<RegisterArray name="A" length="8" width="16" id="model.module.RegisterArray5896df5c" >
		<Register name="A[0]" width="16" initialValue="0" readOnly="false" id="model.module.Register2b05aac0" />
		<Register name="A[1]" width="16" initialValue="0" readOnly="false" id="model.module.Register438c5dcd" />
		<Register name="A[2]" width="16" initialValue="0" readOnly="false" id="model.module.Register46a2acb1" />
		<Register name="A[3]" width="16" initialValue="0" readOnly="false" id="model.module.Register28a0e706" />
		<Register name="A[4]" width="16" initialValue="0" readOnly="false" id="model.module.Register2ef50b78" />
		<Register name="A[5]" width="16" initialValue="0" readOnly="false" id="model.module.Registerf36495e" />
		<Register name="A[6]" width="16" initialValue="0" readOnly="false" id="model.module.Register5c22ab2d" />
		<Register name="A[7]" width="16" initialValue="0" readOnly="false" id="model.module.Register7315ff78" />
	</RegisterArray>

	<!--............. condition bits ................-->
	<ConditionBit name="halt" bit="0" register="model.module.Register68fdbacf" halt="true" id="model.module.ConditionBit75bd94a9" />

	<!--............. rams ..........................-->
	<RAM name="Main" length="256" cellSize="8" id="model.module.RAM487c5ff9" />
	<RAM name="Stack" length="128" cellSize="8" id="model.module.RAM1cefe18" />

	<!--............. set ...........................-->
	<Set name="clear-buf1" register="model.module.Register4587e0a" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet5dfc2f66" />
	<Set name="clear-mar" register="model.module.Registerc488d59" start="0" numBits="12" value="0" id="model.microinstruction.CpusimSet447df0ac" />
	<Set name="clear-pc" register="model.module.Register2865baf" start="0" numBits="12" value="0" id="model.microinstruction.CpusimSet6ed4ec4d" />
	<Set name="clear-stackpt" register="model.module.Register1b7e63fe" start="0" numBits="12" value="0" id="model.microinstruction.CpusimSet189ce1b1" />

	<!--............. test ..........................-->
	<Test name="if(buf1!=0)skip-2" register="model.module.Register4587e0a" start="0" numBits="16" comparison="NE" value="0" omission="2" id="model.microinstruction.Test24277adb" />
	<Test name="if(buf1&gt;=0)skip-2" register="model.module.Register4587e0a" start="0" numBits="16" comparison="GE" value="0" omission="2" id="model.microinstruction.Testf741663" />
	<Test name="if(mar=IO)skip3" register="model.module.Registerc488d59" start="0" numBits="12" comparison="EQ" value="254" omission="3" id="model.microinstruction.Test460b3544" />
	<Test name="if(mar=IO)skip4" register="model.module.Registerc488d59" start="0" numBits="12" comparison="EQ" value="254" omission="4" id="model.microinstruction.Test3965c55d" />

	<!--............. increment .....................-->
	<Increment name="Dec2-stackpt" register="model.module.Register1b7e63fe" overflowBit="model.module.ConditionBit75bd94a9" delta="-2" id="model.microinstruction.Increment268b8108" />
	<Increment name="Inc2-mar" register="model.module.Registerc488d59" overflowBit="model.module.ConditionBit75bd94a9" delta="2" id="model.microinstruction.Increment9635cb4" />
	<Increment name="Inc2-pc" register="model.module.Register2865baf" overflowBit="model.module.ConditionBit75bd94a9" delta="2" id="model.microinstruction.Increment16ddf9c9" />
	<Increment name="Inc2-stackpt" register="model.module.Register1b7e63fe" overflowBit="model.module.ConditionBit75bd94a9" delta="2" id="model.microinstruction.Increment1058962" />

	<!--............. shift .........................-->
	<Shift name="rsa8buf1" type="arithmetic" source="model.module.Register4587e0a" destination="model.module.Register4587e0a" direction="right" distance="8" id="model.microinstruction.Shift7b7ccb8b" />
	<Shift name="rsa8buf2" type="arithmetic" source="model.module.Registerfa8d81f" destination="model.module.Registerfa8d81f" direction="right" distance="8" id="model.microinstruction.Shift66b30edc" />

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="buf1*buf2-&gt;buf1" type="MULTIPLY" source1="model.module.Register4587e0a" source2="model.module.Registerfa8d81f" destination="model.module.Register4587e0a" overflowBit="model.module.ConditionBit75bd94a9" id="model.microinstruction.Arithmetic6869aeac" />
	<Arithmetic name="buf1+buf2-&gt;buf1" type="ADD" source1="model.module.Register4587e0a" source2="model.module.Registerfa8d81f" destination="model.module.Register4587e0a" overflowBit="model.module.ConditionBit75bd94a9" id="model.microinstruction.Arithmetic110301d9" />
	<Arithmetic name="buf1-buf2-&gt;buf1" type="SUBTRACT" source1="model.module.Register4587e0a" source2="model.module.Registerfa8d81f" destination="model.module.Register4587e0a" overflowBit="model.module.ConditionBit75bd94a9" id="model.microinstruction.Arithmetic3c60d402" />
	<Arithmetic name="buf1/buf2-&gt;buf1" type="DIVIDE" source1="model.module.Register4587e0a" source2="model.module.Registerfa8d81f" destination="model.module.Register4587e0a" overflowBit="model.module.ConditionBit75bd94a9" id="model.microinstruction.Arithmetic215d6096" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="buffer1-&gt;mar" source="model.module.Register4587e0a" srcStartBit="4" dest="model.module.Registerc488d59" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR464b6df" />
	<TransferRtoR name="buffer1-&gt;mdr" source="model.module.Register4587e0a" srcStartBit="0" dest="model.module.Register4b270af4" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoRd607243" />
	<TransferRtoR name="buffer1-&gt;sdr" source="model.module.Register4587e0a" srcStartBit="0" dest="model.module.Register53140e80" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR7d09f89c" />
	<TransferRtoR name="ir(8-15)-&gt;buf1(0-7)" source="model.module.Register7734dee9" srcStartBit="8" dest="model.module.Register4587e0a" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR5cfa7bac" />
	<TransferRtoR name="ir(8-15)-&gt;buf2(0-7)" source="model.module.Register7734dee9" srcStartBit="8" dest="model.module.Registerfa8d81f" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR50ccf35a" />
	<TransferRtoR name="ir(8-15)-&gt;mar" source="model.module.Register7734dee9" srcStartBit="8" dest="model.module.Registerc488d59" destStartBit="4" numBits="8" id="model.microinstruction.TransferRtoR5206f81a" />
	<TransferRtoR name="ir(8-15)-&gt;pc" source="model.module.Register7734dee9" srcStartBit="8" dest="model.module.Register2865baf" destStartBit="4" numBits="8" id="model.microinstruction.TransferRtoR36c1fe4c" />
	<TransferRtoR name="mdr-&gt;buffer1" source="model.module.Register4b270af4" srcStartBit="0" dest="model.module.Register4587e0a" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR4be2d10" />
	<TransferRtoR name="mdr-&gt;ir" source="model.module.Register4b270af4" srcStartBit="0" dest="model.module.Register7734dee9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoRb960130" />
	<TransferRtoR name="pc-&gt;mar" source="model.module.Register2865baf" srcStartBit="0" dest="model.module.Registerc488d59" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR6eb5fe70" />
	<TransferRtoR name="pc-&gt;sdr" source="model.module.Register2865baf" srcStartBit="0" dest="model.module.Register53140e80" destStartBit="4" numBits="12" id="model.microinstruction.TransferRtoR7eb679e4" />
	<TransferRtoR name="sdr-&gt;buffer1" source="model.module.Register53140e80" srcStartBit="0" dest="model.module.Register4587e0a" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR57bf5e74" />
	<TransferRtoR name="sdr-&gt;pc" source="model.module.Register53140e80" srcStartBit="4" dest="model.module.Register2865baf" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR7e4b7c2" />

	<!--............. transferRtoA ..................-->
	<TransferRtoA name="buf1-&gt;A[ir(5-7)]" source="model.module.Register4587e0a" srcStartBit="0" dest="model.module.RegisterArray5896df5c" destStartBit="0" numBits="16" index="model.module.Register7734dee9" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA221c2f3e" />
	<TransferRtoA name="buf1-&gt;A[ir(8-10)]" source="model.module.Register4587e0a" srcStartBit="0" dest="model.module.RegisterArray5896df5c" destStartBit="0" numBits="16" index="model.module.Register7734dee9" indexStart="8" indexNumBits="3" id="model.microinstruction.TransferRtoA19b835cc" />

	<!--............. transferAtoR ..................-->
	<TransferAtoR name="A[ir(5-7)]-&gt;buf1" source="model.module.RegisterArray5896df5c" srcStartBit="0" dest="model.module.Register4587e0a" destStartBit="0" numBits="16" index="model.module.Register7734dee9" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR583f0ef5" />
	<TransferAtoR name="A[ir(8-10)]-&gt;buf1" source="model.module.RegisterArray5896df5c" srcStartBit="0" dest="model.module.Register4587e0a" destStartBit="0" numBits="16" index="model.module.Register7734dee9" indexStart="8" indexNumBits="3" id="model.microinstruction.TransferAtoR75dea778" />
	<TransferAtoR name="A[ir(8-10)]-&gt;buf2" source="model.module.RegisterArray5896df5c" srcStartBit="0" dest="model.module.Registerfa8d81f" destStartBit="0" numBits="16" index="model.module.Register7734dee9" indexStart="8" indexNumBits="3" id="model.microinstruction.TransferAtoR36781322" />

	<!--............. decode ........................-->
	<Decode name="Decode-ir" ir="model.module.Register7734dee9" id="model.microinstruction.Decode6eb64674" />

	<!--............. set condition bit .............-->
	<SetCondBit name="set-halt-bit" bit="model.module.ConditionBit75bd94a9" value="1" id="model.microinstruction.SetCondBit4edea5f1" />

	<!--............. io ............................-->
	<IO name="input-int-&gt;buf1" direction="input" type="integer" buffer="model.module.Register4587e0a" connection="[Console]" id="model.microinstruction.IO4ebb2e35" />
	<IO name="output-buf1-&gt;int" direction="output" type="integer" buffer="model.module.Register4587e0a" connection="[Console]" id="model.microinstruction.IO382cd5c3" />

	<!--............. memory access .................-->
	<MemoryAccess name="Main[mar]-&gt;mdr" direction="read" memory="model.module.RAM487c5ff9" data="model.module.Register4b270af4" address="model.module.Registerc488d59" id="model.microinstruction.MemoryAccess6475a154" />
	<MemoryAccess name="Stack[stackpt]-&gt;sdr" direction="read" memory="model.module.RAM1cefe18" data="model.module.Register53140e80" address="model.module.Register1b7e63fe" id="model.microinstruction.MemoryAccess5f3f7106" />
	<MemoryAccess name="mdr-&gt;Main[mar]" direction="write" memory="model.module.RAM487c5ff9" data="model.module.Register4b270af4" address="model.module.Registerc488d59" id="model.microinstruction.MemoryAccess48e22652" />
	<MemoryAccess name="sdr-&gt;Stack[stackpt]" direction="write" memory="model.module.RAM1cefe18" data="model.module.Register53140e80" address="model.module.Register1b7e63fe" id="model.microinstruction.MemoryAccess16be7040" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End5f080cc2" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<EQU name="IO" value="254" />
	<EQU name="A7" value="7" />
	<EQU name="A6" value="6" />
	<EQU name="A5" value="5" />
	<EQU name="A4" value="4" />
	<EQU name="A3" value="3" />
	<EQU name="A2" value="2" />
	<EQU name="A1" value="1" />
	<EQU name="A0" value="0" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR6eb5fe70" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6475a154" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRb960130" />
		<Microinstruction microRef="model.microinstruction.Increment16ddf9c9" />
		<Microinstruction microRef="model.microinstruction.Decode6eb64674" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="return" opcode="14" instructionFormat="op un11" assemblyFormat="op" instructionColors="#bb8ebd #b8b6c1" assemblyColors="#bb8ebd" >
		<Microinstruction microRef="model.microinstruction.Increment268b8108" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5f3f7106" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7e4b7c2" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="call" opcode="13" instructionFormat="op un3 addr" assemblyFormat="op addr" instructionColors="#faceb9 #f2afe3 #cdcab8" assemblyColors="#faceb9 #cdcab8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR7eb679e4" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess16be7040" />
		<Microinstruction microRef="model.microinstruction.Increment1058962" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR36c1fe4c" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="addi" opcode="12" instructionFormat="op reg sgn5" assemblyFormat="op reg sgn5" instructionColors="#caf48c #df97af #eaa99d" assemblyColors="#caf48c #df97af #eaa99d" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR50ccf35a" />
		<Microinstruction microRef="model.microinstruction.Shift66b30edc" />
		<Microinstruction microRef="model.microinstruction.Arithmetic110301d9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="pop" opcode="11" instructionFormat="op reg un8" assemblyFormat="op reg" instructionColors="#fa94c7 #cc82b2 #858d9a" assemblyColors="#fa94c7 #cc82b2" >
		<Microinstruction microRef="model.microinstruction.Increment268b8108" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5f3f7106" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR57bf5e74" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="push" opcode="10" instructionFormat="op reg un8" assemblyFormat="op reg" instructionColors="#cfb0ec #94b0af #a4a19b" assemblyColors="#cfb0ec #94b0af" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7d09f89c" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess16be7040" />
		<Microinstruction microRef="model.microinstruction.Increment1058962" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="negate" opcode="f" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#9a83a7 #ed8989 #bbd2d1 #d997f1" assemblyColors="#9a83a7 #ed8989 #bbd2d1 #d997f1" >
		<Microinstruction microRef="model.microinstruction.CpusimSet5dfc2f66" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR36781322" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3c60d402" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="clear" opcode="e" instructionFormat="op reg un8" assemblyFormat="op reg" instructionColors="#aca8d2 #8986d0 #ab9393" assemblyColors="#aca8d2 #8986d0 #ab9393" >
		<Microinstruction microRef="model.microinstruction.CpusimSet5dfc2f66" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="loadc" opcode="d" instructionFormat="op reg sgn5" assemblyFormat="op reg sgn5" instructionColors="#cae4e7 #f9adaa #90d196" assemblyColors="#cae4e7 #f9adaa #90d196" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR5cfa7bac" />
		<Microinstruction microRef="model.microinstruction.Shift7b7ccb8b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="store" opcode="c" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#8da1cb #f8c5a8 #a1f8dd #9b87f3" assemblyColors="#8da1cb #f8c5a8 #a1f8dd #9b87f3" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR75dea778" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR464b6df" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.Test460b3544" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRd607243" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess48e22652" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
		<Microinstruction microRef="model.microinstruction.IO382cd5c3" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="load" opcode="b" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#95b6b2 #eff8ed #a481ef #b7c0b6" assemblyColors="#95b6b2 #eff8ed #a481ef #b7c0b6" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR75dea778" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR464b6df" />
		<Microinstruction microRef="model.microinstruction.Test3965c55d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6475a154" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4be2d10" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
		<Microinstruction microRef="model.microinstruction.IO4ebb2e35" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="move" opcode="a" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#e8a284 #e5d5b7 #aedc8f #87d3b9" assemblyColors="#e8a284 #e5d5b7 #aedc8f #87d3b9" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR75dea778" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="divide" opcode="6" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#af90f5 #8a84fa #f5c9ae #c0ddb7" assemblyColors="#af90f5 #8a84fa #f5c9ae #c0ddb7" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR36781322" />
		<Microinstruction microRef="model.microinstruction.Arithmetic215d6096" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="multiply" opcode="5" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#82c5e6 #97b9dc #f0d7e1 #c086b0" assemblyColors="#82c5e6 #97b9dc #f0d7e1 #c086b0" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR36781322" />
		<Microinstruction microRef="model.microinstruction.Arithmetic6869aeac" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="subtract" opcode="4" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#9a83a7 #ed8989 #bbd2d1 #d997f1" assemblyColors="#9a83a7 #ed8989 #bbd2d1 #d997f1" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR36781322" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3c60d402" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="exit" opcode="0" instructionFormat="op un11" assemblyFormat="op" instructionColors="#b1e585 #e3ab94" assemblyColors="#b1e585 #e3ab94" >
		<Microinstruction microRef="model.microinstruction.SetCondBit4edea5f1" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="loadi" opcode="1" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#a4a2bc #8991e1 #84c883" assemblyColors="#a4a2bc #8991e1 #84c883" >
		<Microinstruction microRef="model.microinstruction.CpusimSet447df0ac" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5206f81a" />
		<Microinstruction microRef="model.microinstruction.Test3965c55d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6475a154" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4be2d10" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
		<Microinstruction microRef="model.microinstruction.IO4ebb2e35" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="storei" opcode="2" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#b0f38e #9d82bd #85a4e8" assemblyColors="#b0f38e #9d82bd #85a4e8" >
		<Microinstruction microRef="model.microinstruction.CpusimSet447df0ac" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5206f81a" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.Test460b3544" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRd607243" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess48e22652" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
		<Microinstruction microRef="model.microinstruction.IO382cd5c3" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="3" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#aed78e #90abf3 #a1ab95 #cf829f" assemblyColors="#aed78e #90abf3 #a1ab95 #cf829f" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR36781322" />
		<Microinstruction microRef="model.microinstruction.Arithmetic110301d9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA221c2f3e" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="jump" opcode="7" instructionFormat="op un3 addr" assemblyFormat="op addr" instructionColors="#a1c2d8 #9aa0fe #edab95" assemblyColors="#a1c2d8 #9aa0fe #edab95" >
		<Microinstruction microRef="model.microinstruction.CpusimSet6ed4ec4d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR36c1fe4c" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="8" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#84a4c8 #968395 #d398b6" assemblyColors="#84a4c8 #968395 #d398b6" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.Test24277adb" />
		<Microinstruction microRef="model.microinstruction.CpusimSet6ed4ec4d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR36c1fe4c" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="9" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#fbb3bc #a9a9f7 #e8aee1" assemblyColors="#fbb3bc #a9a9f7 #e8aee1" >
		<Microinstruction microRef="model.microinstruction.TransferAtoR583f0ef5" />
		<Microinstruction microRef="model.microinstruction.Testf741663" />
		<Microinstruction microRef="model.microinstruction.CpusimSet6ed4ec4d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR36c1fe4c" />
		<Microinstruction microRef="model.microinstruction.End5f080cc2" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
		<RegisterRAMPair register="model.module.Register2865baf" ram="model.module.RAM487c5ff9" dynamic="false" />
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM487c5ff9" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
