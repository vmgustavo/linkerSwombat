		  loadi A0 _tst0
		  storei A0 _tst1
		  loadc A1 7
		  loadc A2 9
		  add A1 A2
		  subtract A1 A2
		  clear A3
		  clear A4
		  addi A3 4
		  addi A4 2
		  multiply A3 A4
		  divide A3 A4
		  jump _skip_out0
		  storei A3 IO
_skip_out0:	
		  subtract A3 A3
		  jmpz A3 _skip_out1
		  storei A3 IO
_skip_out1:
		  loadc A5 10
		  loadc A6 5
		  subtract A6 A5
		  jmpn A6 _skip_out2
		  storei A6 IO
_skip_out2:
		  clear A6
		  loadi A7 _addr
		  store A7 A7
		  load A6 A7
		  push A7
		  clear A7
		  pop A7
		  move A7 A6
		  negate A6 A6
		  call _routine
		  exit
				
_routine:
		  loadc A0 123
		  storei A0 IO
		  return
				

_tst0:	 .data 2 5
_tst1:	 .data 2 0
_addr:	 .data 2 100
