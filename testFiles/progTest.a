    loadi A0 IO ; get OP
    loadi A1 IO ; get A
    loadi A2 IO ; get B
    loadi A3 IO ; get C

    storei A0 _op
    storei A1 _a
    storei A2 _b
    storei A3 _c

    loadc A6 1
    loadi A7 _op
    subtract A6 A7
    jmpz A6 _call_op1

	loadc A6 1
    loadi A7 _op
    subtract A6 A7
    jmpz A6 _call_op2

    loadc A6 3
    loadi A7 _op
    subtract A6 A7
    jmpz A6 _call_op3

    loadc A6 4
    loadi A7 _op
    subtract A6 A7
    jmpz A6 _call_op4

    loadc A6 5
    loadi A7 _op
    subtract A6 A7
    jmpz A6 _call_op5

    jump _end

_call_op1:
    call _op1
    jump _end
_call_op2:
    call _op2
    jump _end
_call_op3:
    call _op3
    jump _end
_call_op4:
    call _op4
    jump _end
_call_op5:
    call _op5
    jump _end

_end:
    exit

_op1:

    loadi A0 _a
    loadi A1 _b
    subtract A0 A1
    jmpn A0 _bMAa
    loadi A0 _a     ; aMAb
    loadi A1 _c
    subtract A0 A1
    jmpn A0 _printC1    ; cMAa
    jump _printA1   ; aMAc

_bMAa:
    loadi A0 _b
    loadi A1 _c
    subtract A0 A1
    jmpn A0 _printC1    ; cMAb
    jump _printB1   ; bMAc

_printA1:
    loadi A0 _a
    storei A0 IO
    jump _endOp1

_printB1:
    loadi A0 _b
    storei A0 IO
    jump _endOp1

_printC1:
    loadi A0 _c
    storei A0 IO
    jump _endOp1

_endOp1:

return

_op2:

    loadi A0 _a
    loadi A1 _b
    subtract A0 A1
    jmpn A0 _aMEb
    loadi A0 _b ; bMEa
    loadi A1 _c
    subtract A0 A1
    jmpn A0 _printB2    ; bMEc
    jump _printC2   ; cMEb

_aMEb:
    loadi A0 _a
    loadi A1 _c
    subtract A0 A1
    jmpn A0 _printA2    ; aMEc
    jump _printC2   ; cMEa

_printA2:
    loadi A0 _a
    storei A0 IO
    jump _endOp2

_printB2:
    loadi A0 _b
    storei A0 IO
    jump _endOp2

_printC2:
    loadi A0 _c
    storei A0 IO
    jump _endOp2

_endOp2:

return

_op3:

    clear A0
    loadi A1 _a
    add A0 A1
    loadi A1 _b
    add A0 A1
    loadi A1 _c
    add A0 A1

	storei A0 IO

return

_op4:

    loadi A0 _a
    loadi A1 _b
    multiply A0 A1
    loadi A1 _c
    multiply A0 A1

    storei A0 IO

return

_op5:

    clear A0
    loadi A1 _a
    add A0 A1
    loadi A1 _b
    add A0 A1
    loadi A1 _c
    add A0 A1

    loadc A1 3
    divide A0 A1

    storei A0 IO

return

_op:      .data 2 0
_a:       .data 2 0
_b:       .data 2 0
_c:       .data 2 0
